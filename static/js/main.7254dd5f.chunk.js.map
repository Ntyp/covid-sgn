{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","data","setData","count","setCount","dataChart","setDataChart","tick","useEffect","fetch","then","response","json","console","log","data_date","i","length","moment","format","subtract","interval","setInterval","tempData","colorx11","sort","a","b","timeline","cases","map","item","index","model","id","title","country","value","color","push","clearInterval","backgroundColor","width","padding","itemHeight","gap","titleStyle","font","valueStyle","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAKe,SAASA,IACtB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAyBMC,EAAO,WAETH,EADCD,EAAO,GACCA,EAAM,EAIN,IAMbK,qBAAW,WACTC,MAAM,yDACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAT,GACJC,EAAQD,MAGVY,QAAQC,IAAIb,KACb,IAGH,IADA,IAAIc,EAAY,GACRC,EAAE,EAAEA,GAAGf,EAAKgB,OAAOD,IAEN,GAAhBD,EAAUC,KAEXD,EAAU,GAAKG,MAASC,OAAO,WAEjCJ,EAAUC,GAAKE,MAASE,SAAS,GAAGJ,EAAG,QAAQG,OAAO,UAsHxD,OA3GAX,qBAAU,WACR,IAAMa,EAAWC,YAAYf,EAAK,KAC9BgsBr5F,OArBAvB,EAAKwB,MAAK,SAACC,EAAEC,GAAH,OAAOA,EAAEC,SAASC,MAAMd,EAAUZ,IAAUuB,EAAEE,SAASC,MAAMd,EAAUZ,OAAS2B,KAAI,SAACC,EAAKC,GAClG,IAAMC,EAAS,CACXC,GAAGF,EACHG,MAAMJ,EAAKK,QACXC,MAAMN,EAAKH,SAASC,MAAMd,EAAUZ,IACpCmC,MAAMd,EAASQ,IAIhBA,EAAQ,IACTT,EAASgB,KAAKN,MAMlBpB,QAAQC,IAAI,YAAYT,GACxBC,EAAaiB,GAIN,WAEHiB,cAAcnB,MAElB,CAAClB,IAgFD,gCACE,mCACE,2DACA,yCAAkB,+BAAOY,EAAU,EAAEZ,KAFvC,IAEsD,uBAGpD,cAAC,IAAD,CACAF,KAAMI,EACNoC,gBAAgB,OAChBC,MAAO,IACPC,QAAS,GACTC,WAAY,GACZC,IAAK,GACLC,WAAY,CAAEC,KAAM,wBAAyBT,MAAO,QACpDU,WAAY,CAAED,KAAM,wBAAyBT,MAAO,aActD,8BClNN,IAYeW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzC,MAAK,YAAkD,IAA/C0C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7254dd5f.chunk.js","sourcesContent":["import React , { Component , useState , useEffect} from 'react';\nimport './App.css';\nimport moment from 'moment'\nimport ChartRace from 'react-chart-race';\nimport randomColor from \"randomcolor\";\nexport default function App() {\n  const [data, setData] = useState([]);\n  const [count, setCount] = useState(0);\n  const [dataChart, setDataChart] = useState([])\n  var dayout = 30;\n\n\n  /* const datachart = [{\n    id:\"\",\n    title:\"\",\n    value:\"\",\n    color:\"\"\n  }] */\n// **********************************************\n    // Random Color\n// **********************************************\n\n  const randomColor = () => {\n    return 'rgb(${255 * Math.random()}, ${255 * Math.random()}, ${255})';\n  }\n\n  \n\n// **********************************************\n    // Fetch & Set Interval Data\n// **********************************************\n\n\n  const tick = () => {\n    if(count <28) {\n      setCount(count+1)\n      \n    }\n    else{\n      setCount(0)\n    }\n  } \n\n \n\n  useEffect (() => {\n    fetch(\"https://disease.sh/v3/covid-19/historical?lastdays=30\")\n      .then(response => response.json())\n      .then(data => {\n        setData(data)\n      })\n      \n      console.log(data)\n  }, [] )\n\n  let data_date = []\n  for(let i=0;i<=data.length;i++)\n  {\n    if(data_date[i] == 1)\n    {\n      data_date[1] = moment().format('M/D/YY');\n    }\n    data_date[i] = moment().subtract(29-i, 'days').format('M/D/YY');\n    // console.log(data_date[i])\n  }\n  function getRandomColor() {\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n    for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n    }\n  useEffect(() => {\n    const interval = setInterval(tick,100)\n    let tempData = [];\n    let colorx11 = [\"#63b598\", \"#ce7d78\", \"#ea9e70\", \"#a48a9e\", \"#c6e1e8\", \"#648177\" ,\"#0d5ac1\" ,\"#f205e6\" ,\"#1c0365\" ,\"#14a9ad\" ,\"#4ca2f9\" ,\"#a4e43f\" ,\"#d298e2\" ,\"#6119d0\",\"#d2737d\" ,\"#c0a43c\" ,\"#f2510e\" ,\"#651be6\" ,\"#79806e\" ,\"#61da5e\" ,\"#cd2f00\" ,\"#9348af\" ,\"#01ac53\" ,\"#c5a4fb\" ,\"#996635\",\"#b11573\" ,\"#4bb473\" ,\"#75d89e\" ,\"#2f3f94\" ,\"#2f7b99\" ,\"#da967d\" ,\"#34891f\" ,\"#b0d87b\" ,\"#ca4751\" ,\"#7e50a8\" ,\"#c4d647\" ,\"#e0eeb8\" ,\"#11dec1\" ,\"#289812\" ,\"#566ca0\" ,\"#ffdbe1\" ,\"#2f1179\" ,\"#935b6d\" ,\"#916988\" ,\"#513d98\" ,\"#aead3a\", \"#9e6d71\", \"#4b5bdc\", \"#0cd36d\",\"#250662\", \"#cb5bea\", \"#228916\", \"#ac3e1b\", \"#df514a\", \"#539397\", \"#880977\",\"#f697c1\", \"#ba96ce\", \"#679c9d\", \"#c6c42c\", \"#5d2c52\", \"#48b41b\", \"#e1cf3b\",\"#5be4f0\", \"#57c4d8\", \"#a4d17a\", \"#225b8\", \"#be608b\", \"#96b00c\", \"#088baf\",\"#f158bf\", \"#e145ba\", \"#ee91e3\", \"#05d371\", \"#5426e0\", \"#4834d0\", \"#802234\",\"#6749e8\", \"#0971f0\", \"#8fb413\", \"#b2b4f0\", \"#c3c89d\", \"#c9a941\", \"#41d158\",\"#fb21a3\", \"#51aed9\", \"#5bb32d\", \"#807fb\", \"#21538e\", \"#89d534\", \"#d36647\",\"#7fb411\", \"#0023b8\", \"#3b8c2a\", \"#986b53\", \"#f50422\", \"#983f7a\", \"#ea24a3\",\"#79352c\", \"#521250\", \"#c79ed2\", \"#d6dd92\", \"#e33e52\", \"#b2be57\", \"#fa06ec\",\"#1bb699\", \"#6b2e5f\", \"#64820f\", \"#1c271\", \"#21538e\", \"#89d534\", \"#d36647\",\"#7fb411\", \"#0023b8\", \"#3b8c2a\", \"#986b53\", \"#f50422\", \"#983f7a\", \"#ea24a3\",\"#79352c\", \"#521250\", \"#c79ed2\", \"#d6dd92\", \"#e33e52\", \"#b2be57\", \"#fa06ec\",\"#1bb699\", \"#6b2e5f\", \"#64820f\", \"#1c271\", \"#9cb64a\", \"#996c48\", \"#9ab9b7\",\"#06e052\", \"#e3a481\", \"#0eb621\", \"#fc458e\", \"#b2db15\", \"#aa226d\", \"#792ed8\",\"#73872a\", \"#520d3a\", \"#cefcb8\", \"#a5b3d9\", \"#7d1d85\", \"#c4fd57\", \"#f1ae16\",\"#8fe22a\", \"#ef6e3c\", \"#243eeb\", \"#1dc18\", \"#dd93fd\", \"#3f8473\", \"#e7dbce\", \"#421f79\", \"#7a3d93\", \"#635f6d\", \"#93f2d7\", \"#9b5c2a\", \"#15b9ee\", \"#0f5997\",\"#409188\", \"#911e20\", \"#1350ce\", \"#10e5b1\", \"#fff4d7\", \"#cb2582\", \"#ce00be\",\"#32d5d6\", \"#17232\", \"#608572\", \"#c79bc2\", \"#00f87c\", \"#77772a\", \"#6995ba\",\"#fc6b57\", \"#f07815\", \"#8fd883\", \"#060e27\", \"#96e591\", \"#21d52e\", \"#d00043\",\"#b47162\", \"#1ec227\", \"#4f0f6f\", \"#1d1d58\", \"#947002\", \"#bde052\", \"#e08c56\",\"#28fcfd\", \"#bb09b\", \"#36486a\", \"#d02e29\", \"#1ae6db\", \"#3e464c\", \"#a84a8f\",\"#911e7e\", \"#3f16d9\", \"#0f525f\", \"#ac7c0a\", \"#b4c086\", \"#c9d730\", \"#30cc49\",\"#3d6751\", \"#fb4c03\", \"#640fc1\", \"#62c03e\", \"#d3493a\", \"#88aa0b\", \"#406df9\",\"#615af0\", \"#4be47\", \"#2a3434\", \"#4a543f\", \"#79bca0\", \"#a8b8d4\", \"#00efd4\",\"#7ad236\", \"#7260d8\", \"#1deaa7\", \"#06f43a\", \"#823c59\", \"#e3d94c\", \"#dc1c06\",\"#f53b2a\", \"#b46238\", \"#2dfff6\", \"#a82b89\", \"#1a8011\", \"#436a9f\", \"#1a806a\",\"#4cf09d\", \"#c188a2\", \"#67eb4b\", \"#b308d3\", \"#fc7e41\", \"#af3101\", \"#ff065\",\"#71b1f4\", \"#a2f8a5\", \"#e23dd0\", \"#d3486d\", \"#00f7f9\", \"#474893\", \"#3cec35\",\"#1bede6\", \"#8798a4\", \"#d7790f\", \"#b2c24f\", \"#de73c2\", \"#d70a9c\", \"#25b67\",\"#88e9b8\", \"#c2b0e2\", \"#86e98f\", \"#ae90e2\", \"#1a806b\", \"#436a9e\", \"#0ec0ff\",\"#f812b3\", \"#b17fc9\", \"#8d6c2f\", \"#d3277a\", \"#2ca1ae\", \"#9685eb\", \"#8a96c6\",\"#dba2e6\", \"#76fc1b\", \"#608fa4\", \"#20f6ba\", \"#07d7f6\", \"#dce77a\", \"#77ecca\"]\n    data.sort((a,b)=>b.timeline.cases[data_date[count]] - a.timeline.cases[data_date[count]]).map((item,index)=>{\n      const model =  {\n          id:index,\n          title:item.country,\n          value:item.timeline.cases[data_date[count]],\n          color:colorx11[index]\n      }\n      \n      /* tempData.push(model) */\n      if(index < 50) {\n        tempData.push(model)\n      }\n      return \n      \n    })\n    // console.log(\"tempData =>\",tempData)\n    console.log(\"dataChart\",dataChart)\n    setDataChart(tempData)\n    // ChangeData\n    // const datachart = [{id:{},title:{},value:{},color:{}}]    //Convert data to datachart type : id = {index} title = {country} + {province} value: {timeline.date[data_date[count]]} color:{???}\n\n    return () => {\n        \n        clearInterval(interval)\n    }\n  },[count])\n  \n  // useEffect(() => {\n  //   let tempcolor = [];\n  //   data.sort((a,b)=>b.timeline.cases[data_date[count]] - a.timeline.cases[data_date[count]]).map((item,index)=>{\n  //     const colorx = { \n  //       color:randomColor({index})\n  //     }\n  //     if(index < 10) {\n  //       tempcolor.push(colorx)\n  //     }\n      \n  //     return\n  //   })\n  //   console.log(\"tempColor =>\",tempcolor)\n  //   setDataChart(tempcolor)\n  // },[])\n\n  // useEffect(() => {\n  //   let tempColor\n  //   data.sort((a,b)=>b.timeline.cases[data_date[count]] - a.timeline.cases[data_date[count]]).map((item,index)=>{\n  //     const colorx = {\n  //       color:randomColor()\n  //     }\n  //   }\n  // })\n  // },[])\n  \n\n  // useEffect(() => {\n  //   let colordata = [];\n  //   data.sort((a,b)=>b.timeline.cases[data_date[count]] - a.timeline.cases[data_date[count]]).map((item,index)=>{\n  //     const model =  {\n  //         color:randomColor()\n  //     }\n  //     return \n  //   })\n  //   setDataChart(colordata)\n  \n  // },[count])\n  // useEffect(() => {\n  //   data.sort((a,b)=>b.timeline.cases[data_date[count]] - a.timeline.cases[data_date[count]]).map((item,index)=>{\n  //     const model =  {\n  //         id:index,\n  //         title:item.country,\n  //         value:item.timeline.cases[data_date[count]],\n  //         color:''\n  //     }\n  // })\n  \n\n  \n\n\n\n\n// **********************************************\n// **********************************************\n\n\n\n\n// **********************************************\n    // Set Date to Array\n// **********************************************\n\n\n  \n// {dataChart.map((item , index) => (\n//   dataChart.color = randomColor()\n//   console.log(dataChart.color)\n// ))}\n\n// **********************************************\n// **********************************************\n\n\n \n  return(\n    \n    <div>\n      <center>\n        <h2>Covid Global Cases by SGN</h2>\n        <span>Date:</span><span>{data_date[0+count]}</span> <br></br>\n        \n        \n        <ChartRace\n        data={dataChart} \n        backgroundColor='#fff'\n        width={1000}\n        padding={50}\n        itemHeight={20}\n        gap={12}\n        titleStyle={{ font: 'normal 400 13px Arial', color: '#000' }}\n        valueStyle={{ font: 'normal 400 11px Arial', color: '#000' }}\n      />\n      </center>\n      \n      {/* {data.sort((a,b)=>b.timeline.cases[data_date[count]] - a.timeline.cases[data_date[count]]).map((el , index)  => (\n        <div>\n          \n          <center>\n          \n          </center>\n            \n        </div>\n      ))} */}\n\n      <center>\n\n      </center>\n    </div>\n  )\n}\n\n\n\n{/* <ul>\n            <li key={index}> {index}.{el.country}{el.province} =   {el.timeline.cases[data_date[count]]}   </li>\n          </ul> */}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}